rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Função auxiliar para verificar se usuário é admin via custom claims
    function isAdmin() {
      return request.auth != null &&
             request.auth.token.admin == true;
    }

    // Apenas leitura pública para produtos, cursos e posts publicados
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /courses/{courseId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /workshops/{workshopId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /blog-posts/{postId} {
      allow read: if resource.data.published == true || request.auth != null;
      allow write: if isAdmin();
    }

    // Comentários - autenticados podem criar, deletar próprios comentários
    // Autor do post e admins podem deletar qualquer comentário
    match /comments/{commentId} {
      allow read: if true;
      allow create: if request.auth != null &&
                      request.resource.data.userId == request.auth.uid &&
                      request.resource.data.content is string &&
                      request.resource.data.content.size() >= 3 &&
                      request.resource.data.content.size() <= 1000;
      allow delete: if request.auth != null && (
                      resource.data.userId == request.auth.uid ||
                      isAdmin() ||
                      // Verificar se é o autor do post
                      get(/databases/$(database)/documents/blog-posts/$(resource.data.postId)).data.authorUid == request.auth.uid
                    );
    }

    // Avaliações de Produtos - autenticados podem criar, deletar próprias avaliações
    // Admins podem deletar qualquer avaliação
    match /product-reviews/{reviewId} {
      allow read: if true;
      allow create: if request.auth != null &&
                      request.resource.data.userId == request.auth.uid &&
                      request.resource.data.content is string &&
                      request.resource.data.content.size() >= 3 &&
                      request.resource.data.content.size() <= 1000 &&
                      request.resource.data.rating is int &&
                      request.resource.data.rating >= 1 &&
                      request.resource.data.rating <= 5;
      allow delete: if request.auth != null && (
                      resource.data.userId == request.auth.uid ||
                      isAdmin()
                    );
    }

    // Avaliações gerais (para home page)
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if request.auth != null &&
                      request.resource.data.userName is string &&
                      request.resource.data.comment is string &&
                      request.resource.data.comment.size() >= 3 &&
                      request.resource.data.comment.size() <= 1000 &&
                      request.resource.data.rating is int &&
                      request.resource.data.rating >= 1 &&
                      request.resource.data.rating <= 5;
      allow update, delete: if isAdmin();
    }

    // Coleção de usuários - apenas o próprio usuário pode ler/escrever seus dados
    // Admins podem ler todos os usuários (mas operações de delete/update de usuários são via Admin SDK)
    match /users/{userId} {
      allow read: if request.auth != null && 
                    (request.auth.uid == userId || isAdmin());
      allow write: if request.auth != null && request.auth.uid == userId;
    }
  }
}